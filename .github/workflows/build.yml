name: CoreMiner pipeline
on: push
jobs:
  build:
    strategy:
      matrix:
        platform: [ubuntu-latest, raspbian-private]
    runs-on: ${{matrix.platform}}
    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v2
      with:
        submodules: recursive
        token: ${{secrets.SECRET_TOKEN}}
    - name: Build
      if: ${{ matrix.platform != 'windows-latest' }}
      run: |
        mkdir build && cd build
        cmake ..
        make -j4
    - name: Prepare
      run: |
        mkdir build/artifacts
        cp build/coreminer/coreminer build/artifacts
        cp mine.sh build/artifacts
    - name: Upload
      if: github.ref == 'refs/heads/master'
      uses: actions/upload-artifact@v2
      with:
        name: ${{matrix.platform}}
        path: build/artifacts/*
  release:
    if: github.ref == 'refs/heads/master'
    needs: build
    runs-on: ubuntu-latest
    outputs:
        tag: ${{steps.version_bump.outputs.tag}}
        url: ${{steps.create_release.outputs.upload_url}}
    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v2
      with:
        submodules: recursive
        token: ${{secrets.SECRET_TOKEN}}
    - name: Version
      id: version_bump
      uses: anothrNick/github-tag-action@1.13.0
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        DEFAULT_BUMP: "patch"
        RELEASE_BRANCHES: "master"
        WITH_V: true
    - name: Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        tag_name: ${{steps.version_bump.outputs.tag}}
        release_name: coreminer ${{steps.version_bump.outputs.tag}}
        draft: false
        prerelease: false
  artifacts:
    needs: release
    strategy:
      matrix:
        platform: [ubuntu-latest, raspbian-private]
    runs-on: ${{matrix.platform}}
    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v2
      with:
        submodules: recursive
        token: ${{secrets.SECRET_TOKEN}}
    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: ${{matrix.platform.platform}}
    - name: Zip
      run: zip ${{ matrix.platform }}.zip ${{ matrix.platform }}/* -j
    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.url }}
        asset_path: ./${{ matrix.platform }}.zip
        asset_name: coreminer-${{ matrix.platform }}.zip
        asset_content_type: application/zip
  docker:
    needs: release
    strategy:
      matrix:
        platform: [ubuntu-latest, raspbian-private]
    runs-on: ${{matrix.platform}}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive
        token: ${{secrets.SECRET_TOKEN}}
    - name: Docker
      run: |
        docker login ghcr.io -u ${{github.actor}} -p ${{secrets.SECRET_TOKEN}}
        docker build --network=host . -t ghcr.io/catchthatrabbit/coreminer:${{needs.release.outputs.tag}}-${{matrix.platform}} -t ghcr.io/catchthatrabbit/coreminer:${{matrix.platform}}
        docker push --all-tags ghcr.io/catchthatrabbit/coreminer
